#import sys
#sys.path.append(r"C:\Users\nolan\OneDrive\Documents\GitHub\D-Wave")
#print(sys.path)

#from Learning_agent import graphs

#l = list()
#g = graphs.chimera.Chimera()
#a = g.create_graph()
#for i in range(1, 3):
#    for j in range(1, 3):
#        l.append(g.replicate(graph=a, rows=i, columns=j))
#g.plot(graph=l[len(l)-1])
#print(l)
#g.plot(graph={(2, 6): 0.22325651460425322, (13, 13): 0.4190657375908027, (6, 6): 0.6449733125529578, (1, 6): 0.0, (12, 12): 0.36984407182820034, (7, 7): 0.4626979957557906, (0, 7): 0.4553935911379925, (5, 13): 0.9573705612476301, (0, 128): 0.8506612996311672, (0, 5): 0.5057135639431842, (1, 4): 0.07159584524918838, (128, 128): 0.27277600871972496, (2, 4): 0.4688041355524043, (3, 7): 0.0, (2, 5): 0.0, (14, 14): 0.0681987939964529, (6, 14): 0.0, (2, 7): 0.0, (7, 15): 0.0, (129, 129): 0.8877803411227139, (131, 131): 0.18010719513083873, (1, 129): 0.0, (5, 5): 0.9789899616495775, (1, 7): 0.0, (4, 4): 0.24024811390313472, (3, 131): 0.9090634762663303, (0, 0): 0.6565189955075825, (15, 15): 0.7025385375526844, (0, 6): 0.9870773453000441, (2, 130): 0.0, (4, 12): 0.0, (3, 3): 0.2787077403951821, (3, 6): 0.0, (2, 2): 0.8330261710766741, (0, 4): 0.7087790759645399, (1, 5): 0.41186835495804364, (3, 5): 0.0, (3, 4): 0.7925899118249323, (130, 130): 0.38269735903973345, (1, 1): 0.18741263558643972})

# Functional relative imports
#from solvers.simulated_annealing.send_to_SA import SA
#from dwave_interface.Problem_Post import post_problem, convert_to_text

# Broken Relative Imports
#from Learning_agent.graphs.chimera as Chimera
#from Learning_agent.graphs.chimera_visualizer import draw_chimera
#from Learning_agent.graphs.path_finding import path_exists, fully_connectede

# Relative import of copies
#from temp.chimera_visualizer import draw_chimera
#from temp.chimera import Chimera
#from temp.path_finding import path_exists, fully_connected

#def run_metrics():
    # Assuming that all necessary information is in the variable data
 #   print(SA(r"C:\Users\nolan\OneDrive\Documents\GitHub\D-Wave\Performance metrics\solvers\simulated_annealing\bin", "instance.txt"))
  #  return None
    
#.run_metrics()

from Performance_metrics.master_solver import run_instances

x = {(0, 128): 0.9634326790980382, (13, 13): 0.05884838050338814, 
    (6, 6): 0.8254353772059342, (1, 6): 0.0, (12, 12): 0.42888892824804614, 
    (7, 7): 0.13954571203557697, (0, 7): 0.426274214580713, 
    (5, 13): 0.4296085972603224, (2, 6): 0.0, (0, 5): 0.0, 
    (1, 4): 0.18536386687975215, (128, 128): 0.07984593877937396, 
    (2, 4): 0.8121249644712547, (3, 7): 0.47313140959380473, 
    (2, 5): 0.5823642000984334, (14, 14): 0.46563741383959745, 
    (6, 14): 0.0, (2, 7): 0.0, (7, 15): 0.0394906423857051, 
    (129, 129): 0.7500484228206831, (131, 131): 0.6626937065196934, 
    (1, 129): 0.1862002193279464, (5, 5): 0.669401067957829, (1, 7): 0.0, 
    (4, 4): 0.2869378734769994, (3, 131): 0.9153825258929245, 
    (0, 0): 0.2276063274962139, (15, 15): 0.17977118796812597, 
    (0, 6): 0.44354427888710846, (2, 130): 0.0, (4, 12): 0.09861194280484942, 
    (3, 3): 0.4274950012817952, (3, 6): 0.8480613521078071, 
    (2, 2): 0.34538793954976255, (0, 4): 0.0, (1, 5): 0.13550825337241645, 
    (3, 5): 0.0, (3, 4): 0.7656510529136723, (130, 130): 0.5454203562887191, 
    (1, 1): 0.7294036921536221}
    
y = [{(2, 6): 0.5160852615777896, (13, 13): 0.9319646681708734,
(6, 6): 0.8606380663808766, (1, 6): 0.0, (12, 12): 0.6513698529343085,
(7, 7): 0.16563375072880127, (0, 7): 0.0, (5, 13): 0.0,
(4, 12): 0.7338340760527127, (0, 5): 0.23660222273755804,
(1, 4): 0.7323245483844127, (128, 128): 0.045783443174777894,
(2, 4): 0.0, (3, 7): 0.9038168616058962, (2, 5): 0.0,
(14, 14): 0.487573139345321, (6, 14): 0.0, (2, 7): 0.9426353078362628,
(7, 15): 0.6455592536238158, (0, 128): 0.7406443781286747,
(129, 129): 0.7132101466390699, (131, 131): 0.9854602920895158,
(1, 5): 0.25902842868967213, (5, 5): 0.4570409226555594,
(1, 7): 0.24653882575442454, (4, 4): 0.6055189513596845, (3, 131): 0.0,
(0, 0): 0.16268264406083688, (15, 15): 0.009710795948105533,
(0, 6): 0.12062024006460492, (3, 3): 0.9640744750887139,
(3, 6): 0.15441807354502235, (2, 2): 0.5217999096926298,
(0, 4): 0.7663816443072197, (2, 130): 0.0, (3, 5): 0.0, (3, 4): 0.0,
(130, 130): 0.7916268753073616, (1, 129): 0.7862934888901292,
(1, 1): 0.316204105625695}, {(11, 139): 0.0, (8, 13): 0.23660222273755804,
(13, 13): 0.4570409226555594, (9, 9): 0.316204105625695,
(6, 6): 0.8606380663808766, (12, 12): 0.6055189513596845, (10, 12): 0.0,
(7, 7): 0.16563375072880127, (0, 7): 0.0, (137, 137): 0.7132101466390699,
(10, 15): 0.9426353078362628, (15, 23): 0.6455592536238158,
(4, 12): 0.7338340760527127, (1, 6): 0.0, (128, 128): 0.045783443174777894,
(11, 13): 0.0, (3, 7): 0.9038168616058962, (2, 5): 0.0, (14, 22): 0.0,
(13, 21): 0.0, (21, 21): 0.9319646681708734, (8, 14): 0.12062024006460492,
(0, 128): 0.7406443781286747, (12, 20): 0.7338340760527127,
(7, 15): 0.6455592536238158, (9, 15): 0.24653882575442454,
(4, 4): 0.6055189513596845, (3, 131): 0.0, (0, 0): 0.16268264406083688,
(8, 8): 0.16268264406083688, (20, 20): 0.6513698529343085,
(1, 5): 0.25902842868967213, (136, 136): 0.045783443174777894,
(3, 6): 0.15441807354502235, (14, 14): 0.8606380663808766,
(3, 3): 0.9640744750887139, (6, 14): 0.0, (129, 129): 0.7132101466390699,
(8, 15): 0.0, (1, 1): 0.316204105625695, (8, 136): 0.7406443781286747,
(11, 14): 0.15441807354502235, (2, 6): 0.5160852615777896, (9, 14): 0.0,
(22, 22): 0.487573139345321, (10, 13): 0.0, (2, 2): 0.5217999096926298,
(5, 5): 0.4570409226555594, (1, 4): 0.7323245483844127, (5, 13): 0.0,
(130, 130): 0.7916268753073616, (9, 137): 0.7862934888901292, (3, 5): 0.0,
(0, 5): 0.23660222273755804, (11, 15): 0.9038168616058962,
(0, 4): 0.7663816443072197, (8, 12): 0.7663816443072197, (11, 12): 0.0,
(131, 131): 0.9854602920895158, (2, 7): 0.9426353078362628,
(9, 13): 0.25902842868967213, (1, 129): 0.7862934888901292,
(10, 10): 0.5217999096926298, (11, 11): 0.9640744750887139,
(23, 23): 0.009710795948105533, (15, 15): 0.16563375072880127,
(0, 6): 0.12062024006460492, (138, 138): 0.7916268753073616,
(10, 14): 0.5160852615777896, (139, 139): 0.9854602920895158,
(1, 7): 0.24653882575442454, (2, 130): 0.0, (10, 138): 0.0, (3, 4): 0.0,
(2, 4): 0.0, (9, 12): 0.7323245483844127}, {(132, 132): 0.6055189513596845,
(13, 13): 0.9319646681708734, (6, 6): 0.8606380663808766,
(259, 259): 0.9854602920895158, (12, 12): 0.6513698529343085,
(7, 7): 0.16563375072880127, (0, 7): 0.0, (130, 134): 0.5160852615777896,
(1, 6): 0.0, (142, 142): 0.487573139345321, (128, 128): 0.16268264406083688,
(131, 135): 0.9038168616058962, (3, 7): 0.9038168616058962, (2, 5): 0.0,
(130, 133): 0.0, (6, 14): 0.0, (135, 135): 0.16563375072880127,
(143, 143): 0.009710795948105533, (0, 128): 0.7406443781286747,
(7, 15): 0.6455592536238158, (129, 133): 0.25902842868967213,
(128, 134): 0.12062024006460492, (4, 4): 0.6055189513596845,
(130, 135): 0.9426353078362628, (3, 131): 0.0, (0, 0): 0.16268264406083688,
(1, 5): 0.25902842868967213, (129, 135): 0.24653882575442454, (131, 259): 0.0,
(3, 6): 0.15441807354502235, (14, 14): 0.487573139345321, (3, 3): 0.9640744750887139,
(129, 257): 0.7862934888901292, (3, 5): 0.0, (134, 142): 0.0, (129, 129): 0.316204105625695,
(129, 134): 0.0, (1, 1): 0.316204105625695, (128, 132): 0.7663816443072197,
(2, 6): 0.5160852615777896, (131, 134): 0.15441807354502235,
(256, 256): 0.045783443174777894, (135, 143): 0.6455592536238158,
(2, 2): 0.5217999096926298, (128, 133): 0.23660222273755804,
(5, 5): 0.4570409226555594, (1, 4): 0.7323245483844127, (5, 13): 0.0,
(130, 130): 0.5217999096926298, (0, 5): 0.23660222273755804, (128, 135): 0.0,
(258, 258): 0.7916268753073616, (133, 133): 0.4570409226555594,
(0, 4): 0.7663816443072197, (131, 131): 0.9640744750887139,
(2, 7): 0.9426353078362628, (130, 258): 0.0, (1, 129): 0.7862934888901292,
(140, 140): 0.6513698529343085, (131, 132): 0.0, (132, 140): 0.7338340760527127,
(257, 257): 0.7132101466390699, (130, 132): 0.0, (15, 15): 0.009710795948105533,
(141, 141): 0.9319646681708734, (0, 6): 0.12062024006460492,
(128, 256): 0.7406443781286747, (4, 12): 0.7338340760527127, (133, 141): 0.0,
(131, 133): 0.0, (1, 7): 0.24653882575442454, (134, 134): 0.8606380663808766,
(2, 130): 0.0, (3, 4): 0.0, (2, 4): 0.0, (129, 132): 0.7323245483844127},
{(139, 267): 0.0, (132, 132): 0.6055189513596845, (8, 13): 0.23660222273755804,
(11, 11): 0.9640744750887139, (259, 259): 0.9854602920895158,
(12, 12): 0.6055189513596845, (133, 141): 0.0, (0, 7): 0.0,
(266, 266): 0.7916268753073616, (10, 15): 0.9426353078362628,
(143, 143): 0.16563375072880127, (1, 6): 0.0, (142, 142): 0.8606380663808766,
(11, 14): 0.15441807354502235, (150, 150): 0.487573139345321,
(3, 7): 0.9038168616058962, (2, 5): 0.0, (133, 133): 0.4570409226555594,
(13, 13): 0.4570409226555594, (149, 149): 0.9319646681708734,
(131, 131): 0.9640744750887139, (12, 20): 0.7338340760527127,
(138, 142): 0.5160852615777896, (3, 131): 0.0, (139, 140): 0.0,
(129, 133): 0.25902842868967213, (137, 140): 0.7323245483844127,
(138, 140): 0.0, (139, 142): 0.15441807354502235, (134, 134): 0.8606380663808766,
(0, 0): 0.16268264406083688, (136, 141): 0.23660222273755804, (129, 134): 0.0,
(131, 259): 0.0, (131, 133): 0.0, (128, 132): 0.7663816443072197,
(3, 3): 0.9640744750887139, (3, 5): 0.0, (129, 129): 0.316204105625695,
(8, 15): 0.0, (11, 13): 0.0, (130, 135): 0.9426353078362628,
(2, 6): 0.5160852615777896, (130, 134): 0.5160852615777896, (9, 14): 0.0,
(131, 134): 0.15441807354502235, (136, 264): 0.7406443781286747,
(135, 143): 0.6455592536238158, (10, 13): 0.0, (2, 2): 0.5217999096926298,
(5, 5): 0.4570409226555594, (1, 4): 0.7323245483844127,
(135, 135): 0.16563375072880127, (21, 21): 0.9319646681708734,
(138, 138): 0.5217999096926298, (128, 135): 0.0, (258, 258): 0.7916268753073616,
(128, 134): 0.12062024006460492, (0, 4): 0.7663816443072197,
(137, 141): 0.25902842868967213, (267, 267): 0.9854602920895158,
(138, 143): 0.9426353078362628, (8, 12): 0.7663816443072197,
(10, 10): 0.5217999096926298, (142, 150): 0.0, (9, 9): 0.316204105625695,
(1, 1): 0.316204105625695, (141, 141): 0.4570409226555594,
(0, 6): 0.12062024006460492, (128, 256): 0.7406443781286747,
(8, 136): 0.7406443781286747, (139, 139): 0.9640744750887139,
(136, 143): 0.0, (1, 7): 0.24653882575442454, (11, 15): 0.9038168616058962,
(257, 257): 0.7132101466390699, (139, 141): 0.0, (3, 4): 0.0, (2, 4): 0.0,
(9, 12): 0.7323245483844127, (265, 265): 0.7132101466390699,
(137, 265): 0.7862934888901292, (11, 139): 0.0, (6, 6): 0.8606380663808766,
(7, 7): 0.16563375072880127, (137, 137): 0.316204105625695,
(4, 12): 0.7338340760527127, (131, 135): 0.9038168616058962,
(148, 148): 0.6513698529343085, (137, 142): 0.0, (13, 21): 0.0,
(10, 14): 0.5160852615777896, (14, 22): 0.0, (8, 14): 0.12062024006460492,
(0, 128): 0.7406443781286747, (151, 151): 0.009710795948105533, (5, 13): 0.0,
(15, 23): 0.6455592536238158, (9, 15): 0.24653882575442454,
(4, 4): 0.6055189513596845, (10, 12): 0.0, (141, 149): 0.0,
(20, 20): 0.6513698529343085, (1, 5): 0.25902842868967213, (130, 133): 0.0,
(136, 136): 0.16268264406083688, (138, 141): 0.0, (3, 6): 0.15441807354502235,
(14, 14): 0.8606380663808766, (15, 15): 0.16563375072880127, (6, 14): 0.0,
(134, 142): 0.0, (1, 129): 0.7862934888901292, (129, 257): 0.7862934888901292,
(23, 23): 0.009710795948105533, (128, 128): 0.16268264406083688,
(136, 142): 0.12062024006460492, (129, 135): 0.24653882575442454,
(128, 133): 0.23660222273755804, (256, 256): 0.045783443174777894,
(264, 264): 0.045783443174777894, (130, 130): 0.5217999096926298,
(136, 140): 0.7663816443072197, (140, 148): 0.7338340760527127,
(0, 5): 0.23660222273755804, (129, 132): 0.7323245483844127,
(139, 143): 0.9038168616058962, (11, 12): 0.0, (7, 15): 0.6455592536238158,
(2, 7): 0.9426353078362628, (9, 13): 0.25902842868967213, (138, 266): 0.0,
(143, 151): 0.6455592536238158, (22, 22): 0.487573139345321,
(140, 140): 0.6055189513596845, (131, 132): 0.0, (137, 143): 0.24653882575442454,
(132, 140): 0.7338340760527127, (9, 137): 0.7862934888901292, (130, 132): 0.0,
(8, 8): 0.16268264406083688, (130, 258): 0.0, (2, 130): 0.0, (10, 138): 0.0}]
    
print(run_instances(instances = y, settings = {"dwave" : False, "sa" : True,
    "dwave_params" : {"num_reads" : 100, "solver" : "DW_2000Q_VFYC_2_1"},
    "sa_params" : {"-r" : 100, "-s" : 200}}, verbose=True))